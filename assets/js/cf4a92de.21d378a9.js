"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[997],{59670:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tutorials/basic/extracting_prediction_tasks","title":"Extracting a Prediction Task Cohort from MEDS Data","description":"To easily extract prediction tasks from MEDS Data, we will use the","source":"@site/docs/tutorials/basic/extracting_prediction_tasks.mdx","sourceDirName":"tutorials/basic","slug":"/tutorials/basic/extracting_prediction_tasks","permalink":"/docs/tutorials/basic/extracting_prediction_tasks","draft":false,"unlisted":false,"editUrl":"https://github.com/Medical-Event-Data-Standard/medical-event-data-standard.github.io/tree/main/docs/docs/tutorials/basic/extracting_prediction_tasks.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"mainSidebar","previous":{"title":"Pre-processing MEDS Data","permalink":"/docs/tutorials/basic/preprocessing_MEDS_data"},"next":{"title":"Modeling over MEDS data","permalink":"/docs/tutorials/basic/modeling_over_MEDS_data"}}');var u=n(74848),d=n(28453),m=n(32971),r=n.n(m);const b=JSON.parse('{"cells":[{"cell_type":"markdown","id":"3c522bb0-05ec-449b-b32b-a35fba98c2ab","metadata":{},"source":["## Tutorial Set-up"]},{"cell_type":"code","execution_count":10,"id":"6ce85f8e-646d-4a1d-b60e-f26b3f4846d7","metadata":{},"outputs":[],"source":["import os\\n","from pathlib import Path\\n","\\n","DEMO_DIR = Path(os.getenv(\\"MEDS_DEMO_DIR\\", \\"./demo_output\\"))"]},{"cell_type":"markdown","id":"edcbd39e-f485-4203-8b21-6be3cc94d5d9","metadata":{},"source":["### MIMIC-IV Demo Dataset"]},{"cell_type":"markdown","id":"decdbff5","metadata":{},"source":["You can use the [MIMIC_IV_MEDS](https://github.com/Medical-Event-Data-Standard/MIMIC_IV_MEDS) package to easily download and automatically transform the MIMIC-IV-Demo dataset into MEDS:"]},{"cell_type":"code","execution_count":22,"id":"75a4a6df-e1e4-4939-9a12-52a77e189b3a","metadata":{"scrolled":true},"outputs":[],"source":["OUTPUT_DIR = DEMO_DIR / \\"meds/\\"\\n","OUTPUT_DIR.mkdir(parents=True, exist_ok=True)\\n","\\n","!MEDS_extract-MIMIC_IV root_output_dir=$OUTPUT_DIR do_demo=True do_copy=True hydra/job_logging=disabled"]},{"cell_type":"markdown","id":"4d5e2c73-ab89-4bc8-a4c2-996631348ab1","metadata":{},"source":["## Extracting the Prediction Task"]},{"cell_type":"markdown","id":"fc3f4927","metadata":{},"source":["### In-ICU Mortality\\n","\\n","For this tutorial, we\'ll extract a cohort for a basic in-ICU mortality prediction task. Let\'s first define our\\n","task parameters.\\n","\\n","Our goal is to predict the mortality outcome for a patient\'s entire ICU admission using historical patient \\n","data plus the initial 24 hours of data after the patient was first admitted into the ICU. \\n","\\n","Suppose we only want to consider patients whose ICU admission was longer than 48 hours. As such, patients who \\n","died or are discharged from the ICU within 48 hours of being admitted are excluded.\\n","\\n","**Note:** This task is distinct from in-***hospital*** mortality,  ***30-day*** mortality, or ***imminent*** \\n","mortality."]},{"cell_type":"markdown","id":"996acc32","metadata":{},"source":["We can visualize this task as a series of inter-related windows using the below timeline:\\n","\\n","![ICU Mortality](/img/icu_mortality.svg)\\n"]},{"cell_type":"markdown","id":"2a0fac05","metadata":{},"source":["- The \\"blue\\" region represents the \\"**input**\\" data window. All historical patient data up to and including the first 24 hours of a patient\'s ICU admission will serve as input into a downstream model.\\n","- The \\"red\\" bar represents the ICU admission, and would \\"**trigger**\\" the start of our prediction task.\\n","- The \\"yellow\\" region represents the first 48 hours of a patient\'s ICU admission, and we stipulate a \\"**gap**\\" whereby the patient must not have died or been discharged during that period.\\n","- The \\"magenta\\" region represents our prediction \\"target\\" window which can be of varying length, as it ends whenever a patient dies or is discharged."]},{"cell_type":"markdown","id":"ae4e2d2c","metadata":{},"source":["### ACES Configuration File"]},{"cell_type":"markdown","id":"accb3527","metadata":{},"source":["ACES uses a configuration language to capture cohort and task definitions. Details about this configuration language is available in the [ACES Documentation](https://eventstreamaces.readthedocs.io/en/latest/readme.html#task-configuration-file). \\n","\\n","Let\'s walkthrough the construction of an ACES configuration file. At a minimum, the most basic configuration file would contain the `predicates`, `trigger`, and `windows` sections. "]},{"cell_type":"markdown","id":"eb345a96","metadata":{},"source":["#### Predicates\\n","\\n","To capture our task definition, we must first define at least three simple concepts, or ACES plain [predicates](https://eventstreamaces.readthedocs.io/en/latest/notebooks/predicates.html), for our demo dataset.\\n","\\n","For starters, as we are specifically interested in mortality \\"in the ICU\\", an `ICU admission` and a `ICU discharge` predicate would be needed to represent events where patients are officially admitted to the ICU and where patients are officially discharged. We also need the `death` predicate to capture death events so we can accurately capture the mortality component. \\n","\\n","To define predicates, we would need to find how these concepts are represented in our dataset. For MIMIC-IV-Demo in MEDS format, these concepts can be found using simple regular expressions:\\n","\\n","```yaml\\n","predicates:\\n","  icu_admission:\\n","    code: { regex: \\"^ICU_ADMISSION//.*\\" }\\n","  icu_discharge:\\n","    code: { regex: \\"^ICU_DISCHARGE//.*\\" }\\n","  death:\\n","    code: { regex: \\"MEDS_DEATH.*\\" }\\n","```\\n","\\n","Since patients can either die or be discharged from the ICU, we may also create a more complex concept, or an ACES derived predicate, by joining the above simple concepts using an `OR` relationship:\\n","```yaml\\n","predicates:\\n","  discharge_or_death:\\n","    expr: or(icu_discharge, death)\\n","```"]},{"cell_type":"markdown","id":"2fcd5033","metadata":{},"source":["#### Trigger\\n","\\n","As mentioned above, a patient\'s admission into the ICU triggers our prediction task. A designated field defines this ACES [trigger](https://eventstreamaces.readthedocs.io/en/latest/readme.html#trigger-event), and its value must always be one of the specified predicates. For our task, this predicate would be `icu_admission`:\\n","\\n","```yaml\\n","trigger: icu_admission\\n","```"]},{"cell_type":"markdown","id":"e4ecb12c","metadata":{},"source":["\\n","#### Windows\\n","\\n","The windows section contains the remaining three windows we defined previously - `input`, `gap`, and `target`.\\n","\\n","For details on the configuration language syntax for windows, please see the [documentation](https://eventstreamaces.readthedocs.io/en/latest/readme.html#windows). Briefly, certain fields are present in all windows:\\n","\\n","```yaml\\n","windows:\\n","  window_name:\\n","    start:\\n","    end:\\n","    start_inclusive:\\n","    end_inclusive:\\n","```\\n","However, some windows also have optional parameters, such as the `has` field, which captures predicate count criteria for that particular window:\\n","```yaml\\n","windows:\\n","  window_name:\\n","    ...\\n","    has:\\n","      predicate_a: (min, max)\\n","      predicate_b: (min, max)\\n","      ...\\n","```"]},{"cell_type":"markdown","id":"d7c8df0d","metadata":{},"source":["For our in-ICU mortality prediction task, we can define:\\n","\\n","1. `input`, which begins at the start of a patient\'s record (ie., `null`), and ends 24 hours past `trigger` (ie., `icu_admission`). As we\'d like to include the events specified at both the start and end of `input`, if present, we can set both `start_inclusive` and `end_inclusive` as `True`. \\n","\\n","    **Note**: Since we\'d like our model to make a prediction at the end of `input`, we can set `index_timestamp` to be `end`, which corresponds to the timestamp of `trigger + 24h`.\\n","\\n","    ```yaml\\n","    windows:\\n","      input:\\n","        start: null\\n","        end: trigger + 24h\\n","        start_inclusive: True\\n","        end_inclusive: True\\n","        index_timestamp: end\\n","    ```\\n","\\n","2. `gap`, which also begins at `trigger`, and ends 48 hours after. As we have included the left boundary event in `trigger` (ie., `icu_admission`), it would be reasonable to **not** include it again as it should not play a role in `gap`. As such, we set `start_inclusive` to `False`. As we\'d like our ICU admission to be at least 48 hours long, we can place constraints specifying that there cannot be any additional `icu_admission`, `icu_discharge`, or `death` in `gap`.\\n","\\n","    ```yaml\\n","    windows:\\n","      gap:\\n","        start: trigger\\n","        end: start + 48h\\n","        start_inclusive: False\\n","        end_inclusive: True\\n","        has:\\n","          icu_admission: (None, 0)\\n","          discharge_or_death: (None, 0)\\n","    ```\\n","\\n","3. `target`, which begins at the end of `gap`, and ends at the next discharge or death event (ie., `discharge_or_death` predicate). We can use this arrow notation which ACES recognizes as event references (ie., `->` and `<-`; see [Time Range Fields](https://eventstreamaces.readthedocs.io/en/latest/technical.html#time-range-fields)). In our case, we end `target` at the next `discharge_or_death`. Similarly, as we included the event at the end of `gap`, if any, already in `gap`, we can set `start_inclusive` to `False`. \\n","\\n","    **Note**: Since we\'d like to make a binary mortality prediction, we can extract the `death` predicate as a label from `target`, by specifying the `label` field to be `death`.\\n","\\n","    ```yaml\\n","    windows:\\n","      target:\\n","        start: gap.end\\n","        end: start -> discharge_or_death\\n","        start_inclusive: False\\n","        end_inclusive: True\\n","        label: death\\n","    ```"]},{"cell_type":"markdown","id":"fe63e715","metadata":{},"source":["Now, we can put all the components together to form a complete ACES configuration file that captures everything we need for our cohort and task:\\n","\\n","```yaml\\n","predicates:\\n","  icu_admission:\\n","    code: { regex: \\"^ICU_ADMISSION//.*\\" }\\n","  icu_discharge:\\n","    code: { regex: \\"^ICU_DISCHARGE//.*\\" }\\n","  death:\\n","    code: { regex: \\"MEDS_DEATH.*\\" }\\n","  discharge_or_death:\\n","    expr: or(icu_discharge, death)\\n","\\n","trigger: icu_admission\\n","\\n","windows:\\n","  input:\\n","    start: null\\n","    end: trigger + 24h\\n","    start_inclusive: True\\n","    end_inclusive: True\\n","    index_timestamp: end\\n","  gap:\\n","    start: trigger\\n","    end: start + 48h\\n","    start_inclusive: False\\n","    end_inclusive: True\\n","    has:\\n","      icu_admission: (None, 0)\\n","      discharge_or_death: (None, 0)\\n","  target:\\n","    start: gap.end\\n","    end: start -> discharge_or_death\\n","    start_inclusive: False\\n","    end_inclusive: True\\n","    label: death\\n","```"]},{"cell_type":"markdown","id":"851bcb2a","metadata":{},"source":["### End-to-End Extraction using the ACES CLI"]},{"cell_type":"markdown","id":"3ac429e8","metadata":{},"source":["With the configuration file ready, extracting the cohort from our demo dataset is extremely straightforward. All we need to do is run a simple command-line tool."]},{"cell_type":"code","execution_count":3,"id":"3fa7248f","metadata":{},"outputs":[],"source":["in_icu = \\"\\"\\"\\n","predicates:\\n","  icu_admission:\\n","    code: { regex: \\"^ICU_ADMISSION//.*\\" }\\n","  icu_discharge:\\n","    code: { regex: \\"^ICU_DISCHARGE//.*\\" }\\n","  death:\\n","    code: { regex: \\"MEDS_DEATH.*\\" }\\n","  discharge_or_death:\\n","    expr: or(icu_discharge, death)\\n","\\n","trigger: icu_admission\\n","\\n","windows:\\n","  input:\\n","    start: null\\n","    end: trigger + 24h\\n","    start_inclusive: True\\n","    end_inclusive: True\\n","    index_timestamp: end\\n","  gap:\\n","    start: trigger\\n","    end: start + 48h\\n","    start_inclusive: False\\n","    end_inclusive: True\\n","    has:\\n","      icu_admission: (None, 0)\\n","      discharge_or_death: (None, 0)\\n","  target:\\n","    start: gap.end\\n","    end: start -> discharge_or_death\\n","    start_inclusive: False\\n","    end_inclusive: True\\n","    label: death\\n","\\"\\"\\""]},{"cell_type":"markdown","id":"89e29127","metadata":{},"source":["Let\'s save the final configuration file in a YAML file in our demo directory:"]},{"cell_type":"code","execution_count":4,"id":"ff752e38","metadata":{},"outputs":[],"source":["COHORT_NAME = \\"in_icu\\"\\n","COHORT_DIR = DEMO_DIR / \\"cohorts\\"\\n","COHORT_DIR.mkdir(parents=True, exist_ok=True)\\n","\\n","with open(COHORT_DIR / f\\"{COHORT_NAME}.yaml\\", \\"w\\") as f:\\n","    f.write(in_icu)"]},{"cell_type":"markdown","id":"5d3c0c18","metadata":{},"source":["We can now set some variables for CLI parameters. For more information on CLI arguments, please see the [documentation](https://eventstreamaces.readthedocs.io/en/latest/usage.html#detailed-instructions), including [instructions](https://eventstreamaces.readthedocs.io/en/latest/usage.html#multiple-shards) for using `expand_shards` for simultaneous extraction of cohorts over multiple MEDS shards."]},{"cell_type":"code","execution_count":5,"id":"f897d662","metadata":{},"outputs":[],"source":["DATA_STANDARD = \\"meds\\"\\n","DATA_ROOT = OUTPUT_DIR / \\"MEDS_cohort/data/\\"\\n","DATA_SHARD = \\"$(expand_shards train/1 tuning/1 held_out/1)\\""]},{"cell_type":"code","execution_count":6,"id":"6f615e32","metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["[2025-03-25 02:15:42,893][HYDRA] Launching 3 jobs locally\\n","[2025-03-25 02:15:42,893][HYDRA] \\t#0 : cohort_name=in_icu cohort_dir=demo_output/cohorts data=sharded data.standard=meds data.root=demo_output/meds/MEDS_cohort/data data.shard=train/0\\n","\\u001b[32m2025-03-25 02:15:43.313\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m149\\u001b[0m - \\u001b[1mLoading config from \'demo_output/cohorts/in_icu.yaml\'\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.318\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1341\\u001b[0m - \\u001b[1mParsing windows...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.318\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1350\\u001b[0m - \\u001b[1mParsing trigger event...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.318\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1392\\u001b[0m - \\u001b[1mParsing predicates...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.323\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m159\\u001b[0m - \\u001b[1mAttempting to get predicates dataframe given:\\n","standard: meds\\n","ts_format: \'%m/%d/%Y %H:%M\'\\n","root: demo_output/meds/MEDS_cohort/data\\n","shard: train/0\\n","path: ${data.root}/${data.shard}.parquet\\n","_prefix: /${data.shard}\\n","\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.324\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m269\\u001b[0m - \\u001b[1mLoading MEDS data...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.367\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m273\\u001b[0m - \\u001b[1mGenerating plain predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.395\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'icu_admission\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.424\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'icu_discharge\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.464\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'death\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.464\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m280\\u001b[0m - \\u001b[1mCleaning up predicates dataframe...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.505\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m703\\u001b[0m - \\u001b[1mLoaded plain predicates. Generating derived predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.506\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m717\\u001b[0m - \\u001b[1mAdded predicate column \'discharge_or_death\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.506\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m724\\u001b[0m - \\u001b[1mGenerating special predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.506\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m76\\u001b[0m - \\u001b[1mChecking if \'(subject_id, timestamp)\' columns are unique...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.509\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.utils\\u001b[0m:\\u001b[36mlog_tree\\u001b[0m:\\u001b[36m67\\u001b[0m - \\u001b[1m\\n","trigger\\n","\u2523\u2501\u2501 input.end\\n","\u2503   \u2517\u2501\u2501 input.start\\n","\u2517\u2501\u2501 gap.end\\n","    \u2517\u2501\u2501 target.end\\n","\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.510\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m85\\u001b[0m - \\u001b[1mBeginning query...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.510\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m92\\u001b[0m - \\u001b[1mNo static variable criteria specified, removing all rows with null timestamps...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.511\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m99\\u001b[0m - \\u001b[1mIdentifying possible trigger nodes based on the specified trigger event...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.511\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 72,774 rows as they failed to satisfy \'1 <= icu_admission <= None\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.512\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'input.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.596\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'input.start\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.707\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'gap.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.770\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 2 rows as they failed to satisfy \'None <= icu_admission <= 0\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.771\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 53 rows as they failed to satisfy \'None <= discharge_or_death <= 0\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.772\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'target.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.858\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m114\\u001b[0m - \\u001b[1mDone. 60 valid rows returned corresponding to 47 subjects.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.858\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m129\\u001b[0m - \\u001b[1mExtracting label \'death\' from window \'target\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.858\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m150\\u001b[0m - \\u001b[1mSetting index timestamp as \'end\' of window \'input\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.862\\u001b[0m | \\u001b[33m\\u001b[1mWARNING \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mget_and_validate_label_schema\\u001b[0m:\\u001b[36m114\\u001b[0m - \\u001b[33m\\u001b[1mOutput contains columns that are not valid MEDS label columns. For now, we are dropping them.\\n","If you need these columns, please comment on https://github.com/justin13601/ACES/issues/97\\n","Columns:\\n","  - trigger\\n","  - input.end_summary\\n","  - input.start_summary\\n","  - gap.end_summary\\n","  - target.end_summary\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:43.870\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m191\\u001b[0m - \\u001b[1mCompleted in 0:00:00.555944. Results saved to \'demo_output/cohorts/in_icu/train/0.parquet\'.\\u001b[0m\\n","[2025-03-25 02:15:43,871][HYDRA] \\t#1 : cohort_name=in_icu cohort_dir=demo_output/cohorts data=sharded data.standard=meds data.root=demo_output/meds/MEDS_cohort/data data.shard=tuning/0\\n","\\u001b[32m2025-03-25 02:15:44.054\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m149\\u001b[0m - \\u001b[1mLoading config from \'demo_output/cohorts/in_icu.yaml\'\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.058\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1341\\u001b[0m - \\u001b[1mParsing windows...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.059\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1350\\u001b[0m - \\u001b[1mParsing trigger event...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.059\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1392\\u001b[0m - \\u001b[1mParsing predicates...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.060\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m159\\u001b[0m - \\u001b[1mAttempting to get predicates dataframe given:\\n","standard: meds\\n","ts_format: \'%m/%d/%Y %H:%M\'\\n","root: demo_output/meds/MEDS_cohort/data\\n","shard: tuning/0\\n","path: ${data.root}/${data.shard}.parquet\\n","_prefix: /${data.shard}\\n","\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.060\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m269\\u001b[0m - \\u001b[1mLoading MEDS data...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.064\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m273\\u001b[0m - \\u001b[1mGenerating plain predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.067\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'icu_admission\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.070\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'icu_discharge\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.074\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'death\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.074\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m280\\u001b[0m - \\u001b[1mCleaning up predicates dataframe...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.080\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m703\\u001b[0m - \\u001b[1mLoaded plain predicates. Generating derived predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.081\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m717\\u001b[0m - \\u001b[1mAdded predicate column \'discharge_or_death\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.081\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m724\\u001b[0m - \\u001b[1mGenerating special predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.081\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m76\\u001b[0m - \\u001b[1mChecking if \'(subject_id, timestamp)\' columns are unique...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.082\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.utils\\u001b[0m:\\u001b[36mlog_tree\\u001b[0m:\\u001b[36m67\\u001b[0m - \\u001b[1m\\n","trigger\\n","\u2523\u2501\u2501 input.end\\n","\u2503   \u2517\u2501\u2501 input.start\\n","\u2517\u2501\u2501 gap.end\\n","    \u2517\u2501\u2501 target.end\\n","\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.082\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m85\\u001b[0m - \\u001b[1mBeginning query...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.083\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m92\\u001b[0m - \\u001b[1mNo static variable criteria specified, removing all rows with null timestamps...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.083\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m99\\u001b[0m - \\u001b[1mIdentifying possible trigger nodes based on the specified trigger event...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.083\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 6,242 rows as they failed to satisfy \'1 <= icu_admission <= None\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.084\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'input.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.097\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'input.start\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.123\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'gap.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.136\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 0 rows as they failed to satisfy \'None <= icu_admission <= 0\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.136\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 7 rows as they failed to satisfy \'None <= discharge_or_death <= 0\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.137\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'target.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.165\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m114\\u001b[0m - \\u001b[1mDone. 8 valid rows returned corresponding to 5 subjects.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.165\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m129\\u001b[0m - \\u001b[1mExtracting label \'death\' from window \'target\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.166\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m150\\u001b[0m - \\u001b[1mSetting index timestamp as \'end\' of window \'input\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.168\\u001b[0m | \\u001b[33m\\u001b[1mWARNING \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mget_and_validate_label_schema\\u001b[0m:\\u001b[36m114\\u001b[0m - \\u001b[33m\\u001b[1mOutput contains columns that are not valid MEDS label columns. For now, we are dropping them.\\n","If you need these columns, please comment on https://github.com/justin13601/ACES/issues/97\\n","Columns:\\n","  - trigger\\n","  - input.end_summary\\n","  - input.start_summary\\n","  - gap.end_summary\\n","  - target.end_summary\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.173\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m191\\u001b[0m - \\u001b[1mCompleted in 0:00:00.117831. Results saved to \'demo_output/cohorts/in_icu/tuning/0.parquet\'.\\u001b[0m\\n","[2025-03-25 02:15:44,174][HYDRA] \\t#2 : cohort_name=in_icu cohort_dir=demo_output/cohorts data=sharded data.standard=meds data.root=demo_output/meds/MEDS_cohort/data data.shard=held_out/0\\n","\\u001b[32m2025-03-25 02:15:44.267\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m149\\u001b[0m - \\u001b[1mLoading config from \'demo_output/cohorts/in_icu.yaml\'\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.271\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1341\\u001b[0m - \\u001b[1mParsing windows...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.271\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1350\\u001b[0m - \\u001b[1mParsing trigger event...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.271\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.config\\u001b[0m:\\u001b[36mload\\u001b[0m:\\u001b[36m1392\\u001b[0m - \\u001b[1mParsing predicates...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.272\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m159\\u001b[0m - \\u001b[1mAttempting to get predicates dataframe given:\\n","standard: meds\\n","ts_format: \'%m/%d/%Y %H:%M\'\\n","root: demo_output/meds/MEDS_cohort/data\\n","shard: held_out/0\\n","path: ${data.root}/${data.shard}.parquet\\n","_prefix: /${data.shard}\\n","\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.273\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m269\\u001b[0m - \\u001b[1mLoading MEDS data...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.275\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m273\\u001b[0m - \\u001b[1mGenerating plain predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.277\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'icu_admission\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.279\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'icu_discharge\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.281\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m277\\u001b[0m - \\u001b[1mAdded predicate column \'death\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.282\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mgenerate_plain_predicates_from_meds\\u001b[0m:\\u001b[36m280\\u001b[0m - \\u001b[1mCleaning up predicates dataframe...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.285\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m703\\u001b[0m - \\u001b[1mLoaded plain predicates. Generating derived predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.286\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m717\\u001b[0m - \\u001b[1mAdded predicate column \'discharge_or_death\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.286\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.predicates\\u001b[0m:\\u001b[36mget_predicates_df\\u001b[0m:\\u001b[36m724\\u001b[0m - \\u001b[1mGenerating special predicate columns...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.286\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m76\\u001b[0m - \\u001b[1mChecking if \'(subject_id, timestamp)\' columns are unique...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.287\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.utils\\u001b[0m:\\u001b[36mlog_tree\\u001b[0m:\\u001b[36m67\\u001b[0m - \\u001b[1m\\n","trigger\\n","\u2523\u2501\u2501 input.end\\n","\u2503   \u2517\u2501\u2501 input.start\\n","\u2517\u2501\u2501 gap.end\\n","    \u2517\u2501\u2501 target.end\\n","\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.287\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m85\\u001b[0m - \\u001b[1mBeginning query...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.288\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m92\\u001b[0m - \\u001b[1mNo static variable criteria specified, removing all rows with null timestamps...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.288\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m99\\u001b[0m - \\u001b[1mIdentifying possible trigger nodes based on the specified trigger event...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.288\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 4,163 rows as they failed to satisfy \'1 <= icu_admission <= None\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.289\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'input.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.298\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'input.start\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.322\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'gap.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.333\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 0 rows as they failed to satisfy \'None <= icu_admission <= 0\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.333\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.constraints\\u001b[0m:\\u001b[36mcheck_constraints\\u001b[0m:\\u001b[36m110\\u001b[0m - \\u001b[1mExcluding 6 rows as they failed to satisfy \'None <= discharge_or_death <= 0\'.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.334\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.extract_subtree\\u001b[0m:\\u001b[36mextract_subtree\\u001b[0m:\\u001b[36m252\\u001b[0m - \\u001b[1mSummarizing subtree rooted at \'target.end\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.359\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m114\\u001b[0m - \\u001b[1mDone. 6 valid rows returned corresponding to 4 subjects.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.359\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m129\\u001b[0m - \\u001b[1mExtracting label \'death\' from window \'target\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.360\\u001b[0m | \\u001b[33m\\u001b[1mWARNING \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m142\\u001b[0m - \\u001b[33m\\u001b[1mAll labels in the extracted cohort are the same: \'0\'. This may indicate an issue with the task logic. Please double-check your configuration file if this is not expected.\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.360\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.query\\u001b[0m:\\u001b[36mquery\\u001b[0m:\\u001b[36m150\\u001b[0m - \\u001b[1mSetting index timestamp as \'end\' of window \'input\'...\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.363\\u001b[0m | \\u001b[33m\\u001b[1mWARNING \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mget_and_validate_label_schema\\u001b[0m:\\u001b[36m114\\u001b[0m - \\u001b[33m\\u001b[1mOutput contains columns that are not valid MEDS label columns. For now, we are dropping them.\\n","If you need these columns, please comment on https://github.com/justin13601/ACES/issues/97\\n","Columns:\\n","  - trigger\\n","  - input.end_summary\\n","  - input.start_summary\\n","  - gap.end_summary\\n","  - target.end_summary\\u001b[0m\\n","\\u001b[32m2025-03-25 02:15:44.367\\u001b[0m | \\u001b[1mINFO    \\u001b[0m | \\u001b[36maces.__main__\\u001b[0m:\\u001b[36mmain\\u001b[0m:\\u001b[36m191\\u001b[0m - \\u001b[1mCompleted in 0:00:00.099429. Results saved to \'demo_output/cohorts/in_icu/held_out/0.parquet\'.\\u001b[0m\\n"]}],"source":["!aces-cli \\\\\\n","    cohort_name=$COHORT_NAME \\\\\\n","    cohort_dir=$COHORT_DIR \\\\\\n","    data=sharded \\\\\\n","    data.standard=$DATA_STANDARD \\\\\\n","    data.root=$DATA_ROOT \\\\\\n","    data.shard=$DATA_SHARD -m"]},{"cell_type":"markdown","id":"10134c72","metadata":{},"source":["#### Inspecting Results"]},{"cell_type":"markdown","id":"777db5fa","metadata":{},"source":["The CLI would output a parquet file for every shard in each corresponding data split. Let\'s examine the output for the first shard of the train split (this demo dataset only has one shard in the train split):"]},{"cell_type":"code","execution_count":7,"id":"67b1a9f8","metadata":{},"outputs":[],"source":["import pandas as pd\\n","results = pd.read_parquet(COHORT_DIR / COHORT_NAME / \\"train\\" / \\"0.parquet\\")"]},{"cell_type":"markdown","id":"49c44380","metadata":{},"source":["Here is the label distribution of the patients that met our cohort criteria:"]},{"cell_type":"code","execution_count":8,"id":"37b79a47","metadata":{},"outputs":[{"data":{"text/plain":["boolean_value\\n","False    52\\n","True      8\\n","Name: count, dtype: int64"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["results[\'boolean_value\'].value_counts()"]},{"cell_type":"markdown","id":"5e3397b4","metadata":{},"source":["Recall that our `label` predicate was set to `death` in our configuration file. Thus, we can interpret this as 8 patients who died, and 52 patients who were discharged from the ICU. The full results provide the exact `subject_id` for all patients that meet our cohort criteria, and `prediction_time` corresponds to the `index_timestamp` defined in our configuration file."]},{"cell_type":"code","execution_count":9,"id":"e375e79c","metadata":{},"outputs":[{"data":{"text/html":["<div>\\n","<style scoped>\\n","    .dataframe tbody tr th:only-of-type {\\n","        vertical-align: middle;\\n","    }\\n","\\n","    .dataframe tbody tr th {\\n","        vertical-align: top;\\n","    }\\n","\\n","    .dataframe thead th {\\n","        text-align: right;\\n","    }\\n","</style>\\n","<table border=\\"1\\" class=\\"dataframe\\">\\n","  <thead>\\n","    <tr style=\\"text-align: right;\\">\\n","      <th></th>\\n","      <th>subject_id</th>\\n","      <th>prediction_time</th>\\n","      <th>boolean_value</th>\\n","      <th>integer_value</th>\\n","      <th>float_value</th>\\n","      <th>categorical_value</th>\\n","    </tr>\\n","  </thead>\\n","  <tbody>\\n","    <tr>\\n","      <th>0</th>\\n","      <td>10002428</td>\\n","      <td>2156-04-13 16:24:18</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>1</th>\\n","      <td>10002428</td>\\n","      <td>2156-04-20 18:11:19</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>2</th>\\n","      <td>10002428</td>\\n","      <td>2156-05-01 21:53:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>3</th>\\n","      <td>10002428</td>\\n","      <td>2156-05-12 14:49:34</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>4</th>\\n","      <td>10002495</td>\\n","      <td>2141-05-23 20:18:01</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>5</th>\\n","      <td>10003400</td>\\n","      <td>2137-02-26 23:37:19</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>6</th>\\n","      <td>10003400</td>\\n","      <td>2137-08-11 19:54:51</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>7</th>\\n","      <td>10003400</td>\\n","      <td>2137-08-18 17:36:37</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>8</th>\\n","      <td>10004235</td>\\n","      <td>2196-02-25 17:07:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>9</th>\\n","      <td>10004422</td>\\n","      <td>2111-01-18 09:44:50</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>10</th>\\n","      <td>10004720</td>\\n","      <td>2186-11-13 19:55:00</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>11</th>\\n","      <td>10004733</td>\\n","      <td>2174-12-05 11:28:24</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>12</th>\\n","      <td>10005817</td>\\n","      <td>2132-12-16 09:29:01</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>13</th>\\n","      <td>10005817</td>\\n","      <td>2135-01-04 21:55:32</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>14</th>\\n","      <td>10005866</td>\\n","      <td>2149-10-03 12:48:08</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>15</th>\\n","      <td>10005909</td>\\n","      <td>2144-10-30 23:09:03</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>16</th>\\n","      <td>10007058</td>\\n","      <td>2167-11-08 20:22:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>17</th>\\n","      <td>10007818</td>\\n","      <td>2146-06-23 11:46:29</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>18</th>\\n","      <td>10007928</td>\\n","      <td>2129-04-07 00:25:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>19</th>\\n","      <td>10008454</td>\\n","      <td>2110-12-01 17:11:36</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>20</th>\\n","      <td>10009628</td>\\n","      <td>2153-09-20 09:54:49</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>21</th>\\n","      <td>10010471</td>\\n","      <td>2155-12-03 20:33:00</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>22</th>\\n","      <td>10010867</td>\\n","      <td>2147-12-31 09:33:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>23</th>\\n","      <td>10012552</td>\\n","      <td>2140-03-26 14:37:26</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>24</th>\\n","      <td>10014078</td>\\n","      <td>2166-08-23 00:36:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>25</th>\\n","      <td>10014354</td>\\n","      <td>2148-07-08 15:48:09</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>26</th>\\n","      <td>10015272</td>\\n","      <td>2137-06-13 18:37:22</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>27</th>\\n","      <td>10015931</td>\\n","      <td>2177-03-25 21:48:07</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>28</th>\\n","      <td>10018081</td>\\n","      <td>2133-12-19 17:10:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>29</th>\\n","      <td>10018081</td>\\n","      <td>2134-08-06 14:53:33</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>30</th>\\n","      <td>10018328</td>\\n","      <td>2154-04-25 23:03:44</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>31</th>\\n","      <td>10019003</td>\\n","      <td>2153-03-29 02:21:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>32</th>\\n","      <td>10019003</td>\\n","      <td>2153-04-14 19:45:30</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>33</th>\\n","      <td>10019003</td>\\n","      <td>2155-07-11 17:48:57</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>34</th>\\n","      <td>10020187</td>\\n","      <td>2169-01-16 04:56:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>35</th>\\n","      <td>10020306</td>\\n","      <td>2135-01-22 17:01:57</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>36</th>\\n","      <td>10020640</td>\\n","      <td>2153-02-14 01:38:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>37</th>\\n","      <td>10020944</td>\\n","      <td>2131-02-28 16:40:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>38</th>\\n","      <td>10021487</td>\\n","      <td>2116-12-04 01:02:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>39</th>\\n","      <td>10022017</td>\\n","      <td>2189-09-11 10:05:24</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>40</th>\\n","      <td>10023117</td>\\n","      <td>2171-11-15 10:06:41</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>41</th>\\n","      <td>10023117</td>\\n","      <td>2175-03-22 03:20:53</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>42</th>\\n","      <td>10023117</td>\\n","      <td>2175-07-07 17:41:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>43</th>\\n","      <td>10023239</td>\\n","      <td>2137-06-20 19:09:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>44</th>\\n","      <td>10023239</td>\\n","      <td>2140-10-04 09:07:56</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>45</th>\\n","      <td>10024043</td>\\n","      <td>2117-04-12 22:05:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>46</th>\\n","      <td>10025612</td>\\n","      <td>2125-09-26 13:23:24</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>47</th>\\n","      <td>10027445</td>\\n","      <td>2142-08-01 01:41:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>48</th>\\n","      <td>10027602</td>\\n","      <td>2201-10-31 12:25:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>49</th>\\n","      <td>10029291</td>\\n","      <td>2123-02-21 04:13:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>50</th>\\n","      <td>10029291</td>\\n","      <td>2123-02-27 12:12:32</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>51</th>\\n","      <td>10031757</td>\\n","      <td>2137-10-16 17:29:21</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>52</th>\\n","      <td>10032725</td>\\n","      <td>2143-03-23 06:42:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>53</th>\\n","      <td>10035631</td>\\n","      <td>2116-02-29 18:43:20</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>54</th>\\n","      <td>10037861</td>\\n","      <td>2117-03-15 16:34:58</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>55</th>\\n","      <td>10037975</td>\\n","      <td>2185-01-18 19:12:12</td>\\n","      <td>True</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>56</th>\\n","      <td>10038933</td>\\n","      <td>2148-09-11 13:19:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>57</th>\\n","      <td>10038999</td>\\n","      <td>2131-05-23 21:50:33</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>58</th>\\n","      <td>10039708</td>\\n","      <td>2140-01-24 18:08:00</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","    <tr>\\n","      <th>59</th>\\n","      <td>10040025</td>\\n","      <td>2148-01-25 04:50:17</td>\\n","      <td>False</td>\\n","      <td>NaN</td>\\n","      <td>NaN</td>\\n","      <td>None</td>\\n","    </tr>\\n","  </tbody>\\n","</table>\\n","</div>"],"text/plain":["    subject_id     prediction_time  boolean_value  integer_value  float_value  \\\\\\n","0     10002428 2156-04-13 16:24:18          False            NaN          NaN   \\n","1     10002428 2156-04-20 18:11:19          False            NaN          NaN   \\n","2     10002428 2156-05-01 21:53:00          False            NaN          NaN   \\n","3     10002428 2156-05-12 14:49:34          False            NaN          NaN   \\n","4     10002495 2141-05-23 20:18:01          False            NaN          NaN   \\n","5     10003400 2137-02-26 23:37:19          False            NaN          NaN   \\n","6     10003400 2137-08-11 19:54:51          False            NaN          NaN   \\n","7     10003400 2137-08-18 17:36:37           True            NaN          NaN   \\n","8     10004235 2196-02-25 17:07:00          False            NaN          NaN   \\n","9     10004422 2111-01-18 09:44:50          False            NaN          NaN   \\n","10    10004720 2186-11-13 19:55:00           True            NaN          NaN   \\n","11    10004733 2174-12-05 11:28:24          False            NaN          NaN   \\n","12    10005817 2132-12-16 09:29:01          False            NaN          NaN   \\n","13    10005817 2135-01-04 21:55:32           True            NaN          NaN   \\n","14    10005866 2149-10-03 12:48:08          False            NaN          NaN   \\n","15    10005909 2144-10-30 23:09:03          False            NaN          NaN   \\n","16    10007058 2167-11-08 20:22:00          False            NaN          NaN   \\n","17    10007818 2146-06-23 11:46:29           True            NaN          NaN   \\n","18    10007928 2129-04-07 00:25:00          False            NaN          NaN   \\n","19    10008454 2110-12-01 17:11:36          False            NaN          NaN   \\n","20    10009628 2153-09-20 09:54:49          False            NaN          NaN   \\n","21    10010471 2155-12-03 20:33:00           True            NaN          NaN   \\n","22    10010867 2147-12-31 09:33:00          False            NaN          NaN   \\n","23    10012552 2140-03-26 14:37:26          False            NaN          NaN   \\n","24    10014078 2166-08-23 00:36:00          False            NaN          NaN   \\n","25    10014354 2148-07-08 15:48:09          False            NaN          NaN   \\n","26    10015272 2137-06-13 18:37:22          False            NaN          NaN   \\n","27    10015931 2177-03-25 21:48:07           True            NaN          NaN   \\n","28    10018081 2133-12-19 17:10:00          False            NaN          NaN   \\n","29    10018081 2134-08-06 14:53:33          False            NaN          NaN   \\n","30    10018328 2154-04-25 23:03:44          False            NaN          NaN   \\n","31    10019003 2153-03-29 02:21:00          False            NaN          NaN   \\n","32    10019003 2153-04-14 19:45:30          False            NaN          NaN   \\n","33    10019003 2155-07-11 17:48:57          False            NaN          NaN   \\n","34    10020187 2169-01-16 04:56:00          False            NaN          NaN   \\n","35    10020306 2135-01-22 17:01:57          False            NaN          NaN   \\n","36    10020640 2153-02-14 01:38:00          False            NaN          NaN   \\n","37    10020944 2131-02-28 16:40:00          False            NaN          NaN   \\n","38    10021487 2116-12-04 01:02:00          False            NaN          NaN   \\n","39    10022017 2189-09-11 10:05:24          False            NaN          NaN   \\n","40    10023117 2171-11-15 10:06:41          False            NaN          NaN   \\n","41    10023117 2175-03-22 03:20:53          False            NaN          NaN   \\n","42    10023117 2175-07-07 17:41:00          False            NaN          NaN   \\n","43    10023239 2137-06-20 19:09:00          False            NaN          NaN   \\n","44    10023239 2140-10-04 09:07:56          False            NaN          NaN   \\n","45    10024043 2117-04-12 22:05:00          False            NaN          NaN   \\n","46    10025612 2125-09-26 13:23:24          False            NaN          NaN   \\n","47    10027445 2142-08-01 01:41:00          False            NaN          NaN   \\n","48    10027602 2201-10-31 12:25:00          False            NaN          NaN   \\n","49    10029291 2123-02-21 04:13:00          False            NaN          NaN   \\n","50    10029291 2123-02-27 12:12:32          False            NaN          NaN   \\n","51    10031757 2137-10-16 17:29:21          False            NaN          NaN   \\n","52    10032725 2143-03-23 06:42:00          False            NaN          NaN   \\n","53    10035631 2116-02-29 18:43:20          False            NaN          NaN   \\n","54    10037861 2117-03-15 16:34:58           True            NaN          NaN   \\n","55    10037975 2185-01-18 19:12:12           True            NaN          NaN   \\n","56    10038933 2148-09-11 13:19:00          False            NaN          NaN   \\n","57    10038999 2131-05-23 21:50:33          False            NaN          NaN   \\n","58    10039708 2140-01-24 18:08:00          False            NaN          NaN   \\n","59    10040025 2148-01-25 04:50:17          False            NaN          NaN   \\n","\\n","   categorical_value  \\n","0               None  \\n","1               None  \\n","2               None  \\n","3               None  \\n","4               None  \\n","5               None  \\n","6               None  \\n","7               None  \\n","8               None  \\n","9               None  \\n","10              None  \\n","11              None  \\n","12              None  \\n","13              None  \\n","14              None  \\n","15              None  \\n","16              None  \\n","17              None  \\n","18              None  \\n","19              None  \\n","20              None  \\n","21              None  \\n","22              None  \\n","23              None  \\n","24              None  \\n","25              None  \\n","26              None  \\n","27              None  \\n","28              None  \\n","29              None  \\n","30              None  \\n","31              None  \\n","32              None  \\n","33              None  \\n","34              None  \\n","35              None  \\n","36              None  \\n","37              None  \\n","38              None  \\n","39              None  \\n","40              None  \\n","41              None  \\n","42              None  \\n","43              None  \\n","44              None  \\n","45              None  \\n","46              None  \\n","47              None  \\n","48              None  \\n","49              None  \\n","50              None  \\n","51              None  \\n","52              None  \\n","53              None  \\n","54              None  \\n","55              None  \\n","56              None  \\n","57              None  \\n","58              None  \\n","59              None  "]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["results"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.3"}},"nbformat":4,"nbformat_minor":5}'),s={sidebar_position:4},i="Extracting a Prediction Task Cohort from MEDS Data",o={},c=[];function N(t){const e={a:"a",h1:"h1",header:"header",p:"p",...(0,d.R)(),...t.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(e.header,{children:(0,u.jsx)(e.h1,{id:"extracting-a-prediction-task-cohort-from-meds-data",children:"Extracting a Prediction Task Cohort from MEDS Data"})}),"\n",(0,u.jsxs)(e.p,{children:["To easily extract prediction tasks from MEDS Data, we will use the\n",(0,u.jsx)(e.a,{href:"https://github.com/justin13601/aces/",children:"ACES"})," package. This package allows you to define simple\nconfiguration files that specify the inclusion/exclusion criteria for tasks you want to extract and have them\nbe automatically extractable from MEDS data via a command line interface. See the\n",(0,u.jsx)(e.a,{href:"https://eventstreamaces.readthedocs.io/en/latest/",children:"ACES documentation"})," for more information."]}),"\n",(0,u.jsx)(e.p,{children:"In this tutorial, we'll run an end-to-end extraction of a prediction task from the MIMIC-IV Demo dataset."}),"\n",(0,u.jsx)(r(),{rawIpynb:b})]})}function l(t={}){const{wrapper:e}={...(0,d.R)(),...t.components};return e?(0,u.jsx)(e,{...t,children:(0,u.jsx)(N,{...t})}):N(t)}}}]);